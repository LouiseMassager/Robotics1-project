// generated from rosidl_adapter/resource/msg.idl.em
// with input from hrim_actuator_rotaryservo_msgs/msg/GoalRotaryServo.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module hrim_actuator_rotaryservo_msgs {
  module msg {
    module GoalRotaryServo_Constants {
      const uint8 CONTROL_TYPE_NONE = 0;
      const uint8 CONTROL_TYPE_POSITION = 1;
      const uint8 CONTROL_TYPE_EFFORT = 2;
      const uint8 CONTROL_TYPE_VELOCITY = 3;
      const uint8 CONTROL_TYPE_POSITION_VELOCITY = 4;
      const uint8 CONTROL_TYPE_POSITION_EFFORT = 5;
      const uint8 CONTROL_TYPE_VELOCITY_EFFORT = 6;
      const uint8 CONTROL_TYPE_POSITION_VELOCITY_EFFORT = 7;
    };
    @verbatim (language="comment", text=
      " control the position, velocity or/and effort")
    struct GoalRotaryServo {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        " rotary servomotor control type")
      uint8 control_type;

      @verbatim (language="comment", text=
        " goal position")
      double position;

      @verbatim (language="comment", text=
        " movement velocity")
      float velocity;

      @verbatim (language="comment", text=
        " movement acceleration")
      float acceleration;

      @verbatim (language="comment", text=
        " movement torque")
      float effort;
    };
  };
};
